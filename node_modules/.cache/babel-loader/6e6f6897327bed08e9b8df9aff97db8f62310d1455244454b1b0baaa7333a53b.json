{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/RAG-frontend/src/pages/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/ChatPage.css'; // Ensure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatPage() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  useEffect(() => {\n    callCleanEndpoint();\n  }, []);\n  const sendMessage = async () => {\n    if (inputValue.trim()) {\n      const newMessage = {\n        type: 'user',\n        content: inputValue.trim()\n      };\n      setMessages([...messages, newMessage]);\n      setInputValue('');\n      await fetchResponse(newMessage.content);\n    }\n  };\n  const fetchResponse = async message => {\n    const url = 'http://84.235.246.54:5050/ask';\n    const data = {\n      message: message,\n      genModel: 'OCI_CommandRplus',\n      conversation: []\n    };\n    setMessages(prevMessages => [...prevMessages, {\n      type: 'system',\n      content: 'Assistant: '\n    }]);\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      let buffer = '';\n      let botResponse = '';\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) break;\n        buffer += decoder.decode(value, {\n          stream: true\n        });\n        let newlineIndex;\n        while ((newlineIndex = buffer.indexOf('\\n')) !== -1) {\n          const line = buffer.slice(0, newlineIndex);\n          buffer = buffer.slice(newlineIndex + 1);\n          if (line.startsWith('data:')) {\n            const jsonString = line.slice(5).trim();\n            try {\n              const jsonData = JSON.parse(jsonString);\n              if (jsonData.type === 'content') {\n                botResponse += jsonData.content;\n                updateLastMessage(botResponse);\n              } else if (jsonData.type === 'done') {\n                console.log('Response completed');\n              }\n            } catch (error) {\n              console.error('Error parsing JSON:', error);\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Fetch error:', error);\n      updateLastMessage('Error: Failed to get response from the server.');\n    }\n  };\n  const updateLastMessage = content => {\n    setMessages(prevMessages => {\n      const updatedMessages = [...prevMessages];\n      updatedMessages[updatedMessages.length - 1].content = content;\n      return updatedMessages;\n    });\n  };\n  const callCleanEndpoint = async () => {\n    const url = 'http://84.235.246.54:5050/clean_conversation';\n    try {\n      const response = await fetch(url, {\n        method: 'POST'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to clean conversation');\n      }\n      console.log('Conversation cleaned successfully');\n    } catch (error) {\n      console.error('Error cleaning conversation:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://www.idika.gr/wp-content/uploads/2024/06/idika-logo-header.png\",\n      alt: \"IDIKA Logo\",\n      className: \"idika-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-rail\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chatBox\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.type}-message`,\n          children: msg.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"userInput\",\n          placeholder: \"Send a message...\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && sendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"sendButton\",\n          onClick: sendMessage,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-paper-plane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"GG/YeSFNrWOWKG591Wbb47E4YjM=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ChatPage","_s","messages","setMessages","inputValue","setInputValue","callCleanEndpoint","sendMessage","trim","newMessage","type","content","fetchResponse","message","url","data","genModel","conversation","prevMessages","response","fetch","method","headers","body","JSON","stringify","reader","getReader","decoder","TextDecoder","buffer","botResponse","done","value","read","decode","stream","newlineIndex","indexOf","line","slice","startsWith","jsonString","jsonData","parse","updateLastMessage","console","log","error","updatedMessages","length","ok","Error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","map","msg","index","placeholder","onChange","e","target","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["/home/ubuntu/RAG-frontend/src/pages/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/ChatPage.css'; // Ensure this path is correct\n\nfunction ChatPage() {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    callCleanEndpoint();\n  }, []);\n\n  const sendMessage = async () => {\n    if (inputValue.trim()) {\n      const newMessage = { type: 'user', content: inputValue.trim() };\n      setMessages([...messages, newMessage]);\n      setInputValue('');\n      await fetchResponse(newMessage.content);\n    }\n  };\n\n  const fetchResponse = async (message) => {\n    const url = 'http://84.235.246.54:5050/ask';\n    const data = {\n      message: message,\n      genModel: 'OCI_CommandRplus',\n      conversation: []\n    };\n\n    setMessages((prevMessages) => [...prevMessages, { type: 'system', content: 'Assistant: ' }]);\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n      });\n\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n\n      let buffer = '';\n      let botResponse = '';\n\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        buffer += decoder.decode(value, { stream: true });\n\n        let newlineIndex;\n        while ((newlineIndex = buffer.indexOf('\\n')) !== -1) {\n          const line = buffer.slice(0, newlineIndex);\n          buffer = buffer.slice(newlineIndex + 1);\n\n          if (line.startsWith('data:')) {\n            const jsonString = line.slice(5).trim();\n\n            try {\n              const jsonData = JSON.parse(jsonString);\n              if (jsonData.type === 'content') {\n                botResponse += jsonData.content;\n                updateLastMessage(botResponse);\n              } else if (jsonData.type === 'done') {\n                console.log('Response completed');\n              }\n            } catch (error) {\n              console.error('Error parsing JSON:', error);\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Fetch error:', error);\n      updateLastMessage('Error: Failed to get response from the server.');\n    }\n  };\n\n  const updateLastMessage = (content) => {\n    setMessages((prevMessages) => {\n      const updatedMessages = [...prevMessages];\n      updatedMessages[updatedMessages.length - 1].content = content;\n      return updatedMessages;\n    });\n  };\n\n  const callCleanEndpoint = async () => {\n    const url = 'http://84.235.246.54:5050/clean_conversation';\n    try {\n      const response = await fetch(url, { method: 'POST' });\n      if (!response.ok) {\n        throw new Error('Failed to clean conversation');\n      }\n      console.log('Conversation cleaned successfully');\n    } catch (error) {\n      console.error('Error cleaning conversation:', error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <img src=\"https://www.idika.gr/wp-content/uploads/2024/06/idika-logo-header.png\" alt=\"IDIKA Logo\" className=\"idika-logo\" />\n      <div className=\"right-rail\">\n        <div id=\"chatBox\">\n          {messages.map((msg, index) => (\n            <div key={index} className={`message ${msg.type}-message`}>\n              {msg.content}\n            </div>\n          ))}\n        </div>\n        <div className=\"input-area\">\n          <input\n            type=\"text\"\n            id=\"userInput\"\n            placeholder=\"Send a message...\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\n          />\n          <button id=\"sendButton\" onClick={sendMessage}>\n            <i className=\"fas fa-paper-plane\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}